# SECRETS
apiVersion: v1
stringData:
  MYSQL_ROOT_PASSWORD: c8de110f37300a53a971749
  MYSQL_USER: webshopuser
  MYSQL_PASSWORD: 240b2c6d58ff2ce2f508b49f
kind: Secret
type: Opaque
metadata:
  name: mysql-pass
---
# CONFIG MAP
apiVersion: v1
kind: ConfigMap
metadata:
  name: configmap
data:
  MYSQL_USER: webshopuser
---
# STATEFUL APPLICATION
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - image: docker.io/paro1019/mysqldbms:latest
          name: mysql
          imagePullPolicy: Always
          env:
            # Use secret in real usage
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-pass
                  key:
                    MYSQL_ROOT_PASSWORD
                    # Use secret in real usage
            - name: MYSQL_USER
              valueFrom:
                configMapKeyRef:
                  name: configmap
                  key: MYSQL_USER
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-pass
                  key: MYSQL_PASSWORD
          ports:
            - containerPort: 3306
              name: mysql
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  ports:
    - port: 3306
  selector:
    app: mysql
  type: LoadBalancer
---
# APACHE
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    run: apache
  name: apache
spec:
  replicas: 1
  selector:
    matchLabels:
      run: apache
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: apache
    spec:
      containers:
        - image: docker.io/paro1019/apache:latest
          name: apache
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          resources: {}
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    run: apache
  name: apache
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 80
  selector:
    run: apache
  type: LoadBalancer
status:
  loadBalancer: {}
---
# CATEGORY
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    run: category
  name: category
spec:
  replicas: 1
  selector:
    matchLabels:
      run: category
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: category
    spec:
      containers:
        - image: docker.io/paro1019/category:latest
          name: category
          ports:
            - containerPort: 8080
          resources: {}
          imagePullPolicy: Always
          env:
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: configmap
                  key: MYSQL_USER
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-pass
                  key: MYSQL_PASSWORD
            - name: SPRING_DATASOURCE_URL
              value: jdbc:mysql://mysql:3306/product_service
            - name: PRODUCT_RIBBON_LISTOFSERVERS
              value: product:8080/
      initContainers:
        - name: init-delay-category
          image: busybox
          command: ["sleep", "15"]
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    run: category
  name: category
spec:
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    run: category
  type: LoadBalancer
status:
  loadBalancer: {}
---
# PRODUCT
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    run: product
  name: product
spec:
  replicas: 1
  selector:
    matchLabels:
      run: product
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: product
    spec:
      containers:
        - image: docker.io/paro1019/product:latest
          name: product
          ports:
            - containerPort: 8080
          resources: {}
          imagePullPolicy: Always
          env:
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: configmap
                  key: MYSQL_USER
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-pass
                  key: MYSQL_PASSWORD
            - name: SPRING_DATASOURCE_URL
              value: jdbc:mysql://mysql:3306/product_service
            - name: CATEGORY_RIBBON_LISTOFSERVERS
              value: category:8080/
      initContainers:
        - name: init-delay-product
          image: busybox
          command: ["sleep", "15"]
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    run: product
  name: product
spec:
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    run: product
  type: LoadBalancer
status:
  loadBalancer: {}
---
# USER
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    run: user
  name: user
spec:
  replicas: 1
  selector:
    matchLabels:
      run: user
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: user
    spec:
      containers:
        - image: docker.io/paro1019/user:latest
          name: user
          ports:
            - containerPort: 8080
          resources: {}
          imagePullPolicy: Always
          env:
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: configmap
                  key: MYSQL_USER
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-pass
                  key: MYSQL_PASSWORD
            - name: SPRING_DATASOURCE_URL
              value: jdbc:mysql://mysql:3306/user_service
            - name: PRODUCT_RIBBON_LISTOFSERVERS
              value: product:8080/
            - name: CATEGORY_RIBBON_LISTOFSERVERS
              value: category:8080/
      initContainers:
        - name: init-delay-product
          image: busybox
          command: ["sleep", "15"]
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    run: user
  name: user
spec:
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    run: user
  type: LoadBalancer
status:
  loadBalancer: {}
---
# WEBSHOP
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    run: webshop-frontend
  name: webshop-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      run: webshop-frontend
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: webshop-frontend
    spec:
      containers:
        - image: docker.io/paro1019/webshop-frontend:latest
          name: webshop-frontend
          ports:
            - containerPort: 8080
          resources: {}
          imagePullPolicy: Always
          env:
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: configmap
                  key: MYSQL_USER
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-pass
                  key: MYSQL_PASSWORD
            - name: PRODUCT_RIBBON_LISTOFSERVERS
              value: product:8080/
            - name: CATEGORY_RIBBON_LISTOFSERVERS
              value: category:8080/
            - name: USER_RIBBON_LISTOFSERVERS
              value: user:8080/
      initContainers:
        - name: init-delay-category
          image: busybox
          command: ["sleep", "15"]
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    run: webshop-frontend
  name: webshop-frontend
spec:
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    run: webshop-frontend
  type: LoadBalancer
status:
  loadBalancer: {}
---

